{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","Swal","fire","message","logout","useForm","initialState","useState","value","setValue","reset","handleInputChange","target","name","LoginScreen","useDispatch","loading","useSelector","state","ui","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","NotesAppBar","NoteScreen","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","key","Sidebar","signOut","JournalScreen","PrivateRouter","isAuthenticated","Component","rest","props","PublicRouter","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cd1c878.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBy7xQL3l7rO0SaBZdM3T8VOgpc8iCOkks\",\n    authDomain: \"react-app-cursos-b1c8b.firebaseapp.com\",\n    databaseURL: \"https://react-app-cursos-b1c8b.firebaseio.com\",\n    projectId: \"react-app-cursos-b1c8b\",\n    storageBucket: \"react-app-cursos-b1c8b.appspot.com\",\n    messagingSenderId: \"912048145420\",\n    appId: \"1:912048145420:web:efbd828192156629985a29\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}\n\n","\nexport const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading'\n}","import { types } from \"../types/types\";\n\nexport const setError = (err) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n});","import Swal from 'sweetalert2';\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from \"../types/types\";\nimport { finishLoading, startLoading } from './ui';\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n        dispatch(startLoading());\n\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(({ user }) => {\n                dispatch(login(user.uid, user.displayName));\n\n                dispatch(finishLoading());\n            })\n            .catch(e => {\n                dispatch(finishLoading());\n                Swal.fire('Error', e.message, 'error');\n            })\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await user.updateProfile({ displayName: name });\n                dispatch( login(user.uid, user.displayName));\n            })\n            .catch(e => {\n                Swal.fire('Error', e.message, 'error');\n            })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(({ user }) => {\n                dispatch( login(user.uid, user.displayName));\n            });\n    }\n}\n\nexport const login = (uid, displayName) => ({\n\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n\n});\n\nexport const startLogout = () => {\n    return async(dispatch) => {\n        await firebase.auth().signOut();\n\n        dispatch(logout());\n\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n});","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n    const [value, setValue] = useState(initialState);\n\n    const reset = () =>{\n        setValue(initialState);\n    }\n\n    const handleInputChange = ({target}) =>{\n        setValue({\n            ...value,\n            [target.name]: target.value\n        });\n    }\n\n    return [value, handleInputChange, reset];\n\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\nimport { useForm } from '../../hooks/useForm'\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n    const {loading} = useSelector(state => state.ui);\n\n    const [value, handleInputChange] = useForm({\n        email:'david@gmail.com',\n        password: '123456'\n    })\n\n    const {email, password} = value;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        \n        dispatch( startLoginEmailPassword(email,password) );\n    }\n\n    const handleGoogleLogin = () =>{\n        dispatch(startGoogleLogin());\n    }\n    \n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={handleLogin}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div\n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n\n                    <Link\n                        to=\"/auth/register\"\n                        className=\"link\"\n                    >\n                        Create new account\n                    </Link>\n\n                </div>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui);\n\n    const [value, handleInputChange] = useForm({\n        name: 'David',\n        email: 'david@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const { name, email, password, password2 } = value;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\n        }\n\n    }\n\n    const isFormValid = () => {\n\n        if (name.trim().length === 0) {\n            dispatch(setError('Name is requered'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            dispatch(setError('Email is not valid'));\n            return false;\n        } else if (password !== password2 || password.length < 5) {\n            dispatch(setError('Password is not valid'));\n            return false;\n        }\n\n        dispatch(removeError());\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            {\n                msgError &&\n                (<div className='auth__alert-erorr'>\n                    {msgError}\n                </div>)\n            }\n\n            <form onSubmit={handleRegister}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                    disabled={false}\n                >\n                    Register\n                </button>\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Create new account\n                    </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport default function AuthRouter() {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\" >\n                <Switch>\n                    <Route path=\"/auth/login\" component={LoginScreen} />\n\n                    <Route path=\"/auth/register\" component={RegisterScreen} />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NotesAppBar = () => {\n    return (\n        <div className=\"notes__appbar\">\n            <span>30 septiembre 2020</span>\n\n            <div>\n                <button className=\"btn\">\n                    Picture\n                </button>\n                <button className=\"btn\">\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NotesAppBar } from './NotesAppBar'\n \nexport const NoteScreen = () => {\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar/>\n\n            <div className=\"notes__content\">\n                \n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                />\n\n                <textarea\n                    placeholder=\"What happend today\"\n                    className=\"notes__textarea\"\n                >\n                </textarea>\n\n                <div className=\"notes__image\">\n                    <img \n                    src=\"https://e00-marca.uecdn.es/assets/multimedia/imagenes/2020/04/08/15863374252712.jpg\"\n                    alt=\"imagen\"\n                    />\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const JournalEntry = () => {\n    return (\n        <div className=\"journal__entry pointer\">\n            <div \n                className=\"journal__entrypicture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: 'url(https://i.blogs.es/aa1b9a/luna-100mpx/450_1000.jpg)'\n                }}\n            ></div>\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    un nuevo dia\n                </p>\n                <p className=\"journal__entry-content\">\n                    Hermoso dia para cabezaear una balaaaaa\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\">\n                    <span>Monday</span>\n                    <h4>29</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry'\n\nexport const JournalEntries = () => {\n    \n    const entries = [1,2,3,4,5]\n    \n    return (\n        <div className=\"journal__entries\"> \n            {\n                entries.map(value => (\n                    <JournalEntry key={value} />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> David</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n\n            </div>\n\n            <div className=\"journal__new-entry\">\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New Entry\n                </p>\n            </div>\n\n            <JournalEntries/>\n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { NoteScreen } from '../notes/NoteScreen'\n// import { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar'\n\nexport const JournalScreen = () => {\n    return (\n        <div className=\"journal__main-content\">\n            <Sidebar/>\n\n            <main>\n                {/* <NothingSelected/> */}\n                <NoteScreen/>\n            </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest} \n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Component {...props}/>)\n                    : (<Redirect to=\"/auth/login\" />)    \n            )}\n        />\n    )\n}\n\nPrivateRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return ( \n        <Route {...rest} \n            component={(props) => (\n                (!isAuthenticated)\n                    ? (<Component {...props}/>)\n                    : (<Redirect to=\"/\" />)    \n            )}\n        />\n    )\n}\n\nPublicRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from 'react';\nimport { firebase} from '../firebase/firebase-config';\nimport { useDispatch } from 'react-redux';\nimport AuthRouter from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PrivateRouter } from './PrivateRouter';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport { PublicRouter } from './PublicRouter';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [cheking, setCheking] = useState(true);\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((user) => {\n            \n            if(user?.uid){\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n            }else{\n                setIsLoggedIn(false);\n            }\n\n            setCheking(false);\n            \n        });\n\n    }, [dispatch, setCheking, setIsLoggedIn])\n\n    if(cheking){\n        return(\n            <h1>Espere...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRouter path=\"/auth\" isAuthenticated={isLoggedIn} component={AuthRouter} />\n\n                    <PrivateRouter exact path=\"/\" isAuthenticated={isLoggedIn} component={JournalScreen} />\n\n                    <Redirect to=\"/auth/login\"/>\n                </Switch>\n            </div>\n\n\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            };\n\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            };\n\n        case types.uiStartLoading:\n            return{\n                ...state,\n                loading: true \n            };\n        \n        case types.uiFinishLoading:\n            return{\n                ...state,\n                loading: false\n            }       \n\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    ));","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        case types.logout:\n            return {}\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport {Provider} from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\n\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport  './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}