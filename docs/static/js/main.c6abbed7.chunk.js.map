{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNote","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","value","setValue","reset","newFormState","handleInputChange","target","name","LoginScreen","useDispatch","loading","useSelector","state","ui","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","NotesAppBar","active","style","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PrivateRouter","isAuthenticated","Component","rest","props","PublicRouter","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c6abbed7.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBy7xQL3l7rO0SaBZdM3T8VOgpc8iCOkks\",\n    authDomain: \"react-app-cursos-b1c8b.firebaseapp.com\",\n    databaseURL: \"https://react-app-cursos-b1c8b.firebaseio.com\",\n    projectId: \"react-app-cursos-b1c8b\",\n    storageBucket: \"react-app-cursos-b1c8b.appspot.com\",\n    messagingSenderId: \"912048145420\",\n    appId: \"1:912048145420:web:efbd828192156629985a29\"\n  };\n  \nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}\n\n","\nexport const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdate: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update Image note',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\n\n\n}","import { db } from \"../firebase/firebase-config\";\n\n\nexport const loadNotes = async(uid) => {\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n    const notes = [];\n\n    notesSnap.forEach(snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    });\n    \n    return notes;\n}","\nexport const fileUpload = async (file) => {\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/drafdpb6j/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n        \n        const resp = await fetch(cloudUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if(resp.ok){\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        }else{\n            throw await resp.json();\n        }\n\n    } catch (error) {\n        throw error;\n    }\n\n\n\n}","import { db } from \"../firebase/firebase-config\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\nimport Swal from 'sweetalert2';\nimport { fileUpload } from \"../helpers/fileUpload\";\n\n\nexport const startNewNote = () =>{\n    return async(dispatch, getState) => {\n\n        const  {uid} = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n\n        dispatch(activeNote(doc.id, newNote));\n        dispatch(addNewNote(doc.id, newNote));\n\n    }\n}\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n})\n\nexport const startLoadingNotes = (uid) => {\n    return async(dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNote(notes));\n    }\n}\n\nexport const setNote = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = (note) => {\n\n    return async(dispatch, getState) => {\n\n        const  {uid} = getState().auth;\n\n        if(!note.url){\n            delete note.url;\n        }\n\n        const noteToFirestore = {...note};\n        delete noteToFirestore.id;\n\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n\n        dispatch(refreshNote(note.id, noteToFirestore));\n\n        Swal.fire('Saved', note.title, 'success');\n\n    }\n\n}\n\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdate,\n    payload: {\n        id, \n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUploading = (file) => {\n    return async(dispatch, getState) => {\n        const {active:activeNote} = getState().notes;\n        \n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n        \n        const fileUrl = await fileUpload(file);\n        activeNote.url = fileUrl;\n\n        dispatch(startSaveNote(activeNote));\n\n        Swal.close();\n    }\n}\n\nexport const startDeleting = (id) => {\n    return async(dispatch, getState) => {\n        const uid = getState().auth.uid;\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n        dispatch( deleteNote(id));\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n});","import { types } from \"../types/types\";\n\nexport const setError = (err) => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n});","import Swal from 'sweetalert2';\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from \"../types/types\";\nimport { noteLogout } from './notes';\nimport { finishLoading, startLoading } from './ui';\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n        dispatch(startLoading());\n\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(({ user }) => {\n                dispatch(login(user.uid, user.displayName));\n\n                dispatch(finishLoading());\n            })\n            .catch(e => {\n                dispatch(finishLoading());\n                Swal.fire('Error', e.message, 'error');\n            })\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await user.updateProfile({ displayName: name });\n                dispatch( login(user.uid, user.displayName));\n            })\n            .catch(e => {\n                Swal.fire('Error', e.message, 'error');\n            })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(({ user }) => {\n                dispatch( login(user.uid, user.displayName));\n            });\n    }\n}\n\nexport const login = (uid, displayName) => ({\n\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n\n});\n\nexport const startLogout = () => {\n    return async(dispatch) => {\n        await firebase.auth().signOut();\n\n        dispatch(logout());\n        dispatch(noteLogout());\n\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n});","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n    const [value, setValue] = useState(initialState);\n\n    const reset = (newFormState = initialState) =>{\n        setValue(newFormState);\n    }\n\n    const handleInputChange = ({target}) =>{\n        setValue({\n            ...value,\n            [target.name]: target.value\n        });\n    }\n\n    return [value, handleInputChange, reset];\n\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\nimport { useForm } from '../../hooks/useForm'\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n    const {loading} = useSelector(state => state.ui);\n\n    const [value, handleInputChange] = useForm({\n        email:'david@gmail.com',\n        password: '123456'\n    })\n\n    const {email, password} = value;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        \n        dispatch( startLoginEmailPassword(email,password) );\n    }\n\n    const handleGoogleLogin = () =>{\n        dispatch(startGoogleLogin());\n    }\n    \n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={handleLogin} \n                className=\"animate__animated animate__fadeIn\"\n            >\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading}\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div\n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n\n                    <Link\n                        to=\"/auth/register\"\n                        className=\"link\"\n                    >\n                        Create new account\n                    </Link>\n\n                </div>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui);\n\n    const [value, handleInputChange] = useForm({\n        name: 'David',\n        email: 'david@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const { name, email, password, password2 } = value;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\n        }\n\n    }\n\n    const isFormValid = () => {\n\n        if (name.trim().length === 0) {\n            dispatch(setError('Name is requered'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            dispatch(setError('Email is not valid'));\n            return false;\n        } else if (password !== password2 || password.length < 5) {\n            dispatch(setError('Password is not valid'));\n            return false;\n        }\n\n        dispatch(removeError());\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            {\n                msgError &&\n                (<div className='auth__alert-erorr'>\n                    {msgError}\n                </div>)\n            }\n\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                    disabled={false}\n                >\n                    Register\n                </button>\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Create new account\n                    </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport default function AuthRouter() {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\" >\n                <Switch>\n                    <Route path=\"/auth/login\" component={LoginScreen} />\n\n                    <Route path=\"/auth/register\" component={RegisterScreen} />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n\n    const {active} = useSelector(state => state.notes);\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active));\n    }\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n\n        if (file) {\n            dispatch(startUploading(file));\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>30 septiembre 2020</span>\n\n            <input \n            id=\"fileSelector\"\n            type=\"file\"\n            name=\"file\"\n            style={{display: 'none'}}\n            onChange={handleFileChange}\n\n            />\n\n            <div>\n                <button \n                className=\"btn\"\n                onClick={handlePictureClick}\n                >\n                    Picture\n                </button>\n                <button className=\"btn\" onClick={handleSave}>\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n \nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n    \n    const {active:note} = useSelector(state => state.notes); \n    \n    const [formValues, handleInputChange, reset] = useForm(note);\n\n    const {body,title, id} = formValues;\n\n    const activeId = useRef(note.id);\n    \n    useEffect(() => {\n        if(note.id !== activeId.current){\n            reset(note);\n            activeId.current = note.id;\n        }\n\n\n    }, [note,reset]);\n\n    useEffect(() => {\n        dispatch(activeNote(formValues.id, {...formValues}));\n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch(startDeleting(id));\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar/>\n\n            <div className=\"notes__content\">\n                \n                <input \n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happend today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={body}\n                    onChange={handleInputChange}\n                >\n                </textarea>\n\n                {\n                    (note.url)\n                    && \n                        (<div className=\"notes__image\">\n                        <img \n                        src={note.url}\n                        alt=\"imagen\"\n                        />\n                        </div>)\n                }\n\n            </div>\n\n            <button className=\"btn btn-danger\" onClick={handleDelete}> Delete </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br></br>\n                pr create an entry\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const dispatch = useDispatch();\n    const noteDate = moment(date);\n\n    const handleEntryClick = () => {\n        dispatch(activeNote(id, {\n            date, title, body, url\n        }));\n    }\n\n    return (\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn\" onClick={handleEntryClick}>\n\n            {\n                url &&\n                <div\n                    className=\"journal__entrypicture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { JournalEntry } from './JournalEntry'\n\nexport const JournalEntries = () => {\n   \n    const {notes} = useSelector(state => state.notes);\n   \n    return (\n        <div className=\"journal__entries\"> \n            {\n                notes.map(note => (\n                    <JournalEntry \n                        key={note.id}\n                        {...note} \n\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const {name} = useSelector(state => state.auth) \n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    const handleAddNew = () => {\n        dispatch(startNewNote());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name}</span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n\n            </div>\n\n            <div \n                className=\"journal__new-entry\" \n                onClick={handleAddNew}\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New Entry\n                </p>\n            </div>\n\n            <JournalEntries/>\n\n        </aside>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { Sidebar } from './Sidebar';\n\nexport const JournalScreen = () => {\n\n    const {active} = useSelector(state => state.notes);\n\n    return (\n        <div \n        \n            className=\"journal__main-content animate__animated animate__fadeIn\"\n        \n        >\n            <Sidebar/>\n\n            <main>\n                {\n                    (active)\n                        ? (<NoteScreen/>)\n                        :  (<NothingSelected/>)\n                }\n            </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest} \n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Component {...props}/>)\n                    : (<Redirect to=\"/auth/login\" />)    \n            )}\n        />\n    )\n}\n\nPrivateRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return ( \n        <Route {...rest} \n            component={(props) => (\n                (!isAuthenticated)\n                    ? (<Component {...props}/>)\n                    : (<Redirect to=\"/\" />)    \n            )}\n        />\n    )\n}\n\nPublicRouter.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from 'react';\nimport { firebase} from '../firebase/firebase-config';\nimport { useDispatch } from 'react-redux';\nimport AuthRouter from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PrivateRouter } from './PrivateRouter';\nimport { PublicRouter } from './PublicRouter';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\nimport {startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [cheking, setCheking] = useState(true);\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged( async(user) => {\n            \n            if(user?.uid){\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n                dispatch(startLoadingNotes(user.uid));\n\n            }else{\n                setIsLoggedIn(false);\n            }\n\n            setCheking(false);\n            \n        });\n\n    }, [dispatch, setCheking, setIsLoggedIn])\n\n    if(cheking){\n        return(\n            <h1>Wait...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRouter path=\"/auth\" isAuthenticated={isLoggedIn} component={AuthRouter} />\n\n                    <PrivateRouter exact path=\"/\" isAuthenticated={isLoggedIn} component={JournalScreen} />\n\n                    <Redirect to=\"/auth/login\"/>\n                </Switch>\n            </div>\n\n\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            };\n\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            };\n\n        case types.uiStartLoading:\n            return{\n                ...state,\n                loading: true \n            };\n        \n        case types.uiFinishLoading:\n            return{\n                ...state,\n                loading: false\n            }       \n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initialState , action) => {\n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n                \n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload]\n            }    \n        \n        case types.notesUpdate:\n            return{\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id \n                        ? action.payload.note\n                        : note\n                )\n            }\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(note => note.id !== action.payload)\n            }        \n\n        case types.notesLogoutCleaning:\n            return{\n                ...state,\n                active: null,\n                notes: []\n\n            }    \n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    ));","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        case types.logout:\n            return {}\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport {Provider} from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\n\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport  './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}