{"ast":null,"code":"import { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from \"../types/types\";\nexport const startLoginEmailPassword = (email, password) => {\n  return dispatch => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(({\n      user\n    }) => {\n      dispatch(login(user.uid, user.displayName));\n    });\n  };\n};\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n  return dispatch => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(async ({\n      user\n    }) => {\n      await user.updateProfile({\n        displayName: name\n      });\n      dispatch(login(user.uid, user.displayName));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n};\nexport const startGoogleLogin = () => {\n  return dispatch => {\n    firebase.auth().signInWithPopup(googleAuthProvider).then(({\n      user\n    }) => {\n      dispatch(login(user.uid, user.displayName));\n    });\n  };\n};\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName\n  }\n});","map":{"version":3,"sources":["/home/david/Escritorio/React/08-journal-app/src/actions/auth.js"],"names":["firebase","googleAuthProvider","types","startLoginEmailPassword","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","login","uid","displayName","startRegisterWithEmailPasswordName","name","createUserWithEmailAndPassword","updateProfile","catch","e","console","log","startGoogleLogin","signInWithPopup","type","payload"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,kBAAnB,QAA6C,6BAA7C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxD,SAAQC,QAAD,IAAc;AACjBN,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,0BAAhB,CAA2CJ,KAA3C,EAAkDC,QAAlD,EACKI,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChBJ,MAAAA,QAAQ,CACJK,KAAK,CAACD,IAAI,CAACE,GAAN,EAAWF,IAAI,CAACG,WAAhB,CADD,CAAR;AAGH,KALL;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,kCAAkC,GAAG,CAACV,KAAD,EAAQC,QAAR,EAAkBU,IAAlB,KAA2B;AACzE,SAAQT,QAAD,IAAc;AACjBN,IAAAA,QAAQ,CAACO,IAAT,GAAgBS,8BAAhB,CAA+CZ,KAA/C,EAAsDC,QAAtD,EACKI,IADL,CACU,OAAO;AAAEC,MAAAA;AAAF,KAAP,KAAoB;AACtB,YAAMA,IAAI,CAACO,aAAL,CAAmB;AAAEJ,QAAAA,WAAW,EAAEE;AAAf,OAAnB,CAAN;AACAT,MAAAA,QAAQ,CACJK,KAAK,CAACD,IAAI,CAACE,GAAN,EAAWF,IAAI,CAACG,WAAhB,CADD,CAAR;AAGH,KANL,EAOKK,KAPL,CAOWC,CAAC,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KATL;AAUH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMG,gBAAgB,GAAG,MAAM;AAClC,SAAQhB,QAAD,IAAc;AACjBN,IAAAA,QAAQ,CAACO,IAAT,GAAgBgB,eAAhB,CAAgCtB,kBAAhC,EACKQ,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAChBJ,MAAAA,QAAQ,CACJK,KAAK,CAACD,IAAI,CAACE,GAAN,EAAWF,IAAI,CAACG,WAAhB,CADD,CAAR;AAGH,KALL;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMF,KAAK,GAAG,CAACC,GAAD,EAAMC,WAAN,MAAuB;AAExCW,EAAAA,IAAI,EAAEtB,KAAK,CAACS,KAF4B;AAGxCc,EAAAA,OAAO,EAAE;AACLb,IAAAA,GADK;AAELC,IAAAA;AAFK;AAH+B,CAAvB,CAAd","sourcesContent":["import { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from \"../types/types\";\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(({ user }) => {\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            });\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await user.updateProfile({ displayName: name });\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            })\n            .catch(e => {\n                console.log(e);\n            })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(({ user }) => {\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            });\n    }\n}\n\nexport const login = (uid, displayName) => ({\n\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n\n});"]},"metadata":{},"sourceType":"module"}