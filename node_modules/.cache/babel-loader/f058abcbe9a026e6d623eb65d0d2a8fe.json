{"ast":null,"code":"import _toConsumableArray from\"/home/david/Escritorio/React/08-journal-app-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/david/Escritorio/React/08-journal-app-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{types}from\"../types/types\";var initialState={notes:[],active:null};export var notesReducer=function notesReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.notesActive:return _objectSpread(_objectSpread({},state),{},{active:_objectSpread({},action.payload)});case types.notesAddNew:return _objectSpread(_objectSpread({},state),{},{notes:[action.payload].concat(_toConsumableArray(state.notes))});case types.notesLoad:return _objectSpread(_objectSpread({},state),{},{notes:_toConsumableArray(action.payload)});case types.notesUpdate:return _objectSpread(_objectSpread({},state),{},{notes:state.notes.map(function(note){return note.id===action.payload.id?action.payload.note:note;})});case types.notesDelete:return _objectSpread(_objectSpread({},state),{},{active:null,notes:state.notes.filter(function(note){return note.id!==action.payload;})});case types.notesLogoutCleaning:return _objectSpread(_objectSpread({},state),{},{active:null,notes:[]});default:return state;}};","map":{"version":3,"sources":["/home/david/Escritorio/React/08-journal-app-19/src/reducers/notesReducer.js"],"names":["types","initialState","notes","active","notesReducer","state","action","type","notesActive","payload","notesAddNew","notesLoad","notesUpdate","map","note","id","notesDelete","filter","notesLogoutCleaning"],"mappings":"iVAAA,OAASA,KAAT,KAAsB,gBAAtB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EADU,CAEjBC,MAAM,CAAE,IAFS,CAArB,CAKA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BJ,YAA0B,IAAXK,CAAAA,MAAW,2CAC3D,OAAQA,MAAM,CAACC,IAAf,EAEI,IAAKP,CAAAA,KAAK,CAACQ,WAAX,CACI,sCACOH,KADP,MAEIF,MAAM,kBACCG,MAAM,CAACG,OADR,CAFV,GAOJ,IAAKT,CAAAA,KAAK,CAACU,WAAX,CACI,sCACOL,KADP,MAEIH,KAAK,EAAGI,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACH,KAA5B,EAFT,GAKJ,IAAKF,CAAAA,KAAK,CAACW,SAAX,CACI,sCACON,KADP,MAEIH,KAAK,oBAAMI,MAAM,CAACG,OAAb,CAFT,GAKJ,IAAKT,CAAAA,KAAK,CAACY,WAAX,CACI,sCACOP,KADP,MAEIH,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAYW,GAAZ,CACH,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYT,MAAM,CAACG,OAAP,CAAeM,EAA3B,CACFT,MAAM,CAACG,OAAP,CAAeK,IADb,CAEFA,IAFF,EADD,CAFX,GAQJ,IAAKd,CAAAA,KAAK,CAACgB,WAAX,CACI,sCACOX,KADP,MAEIF,MAAM,CAAE,IAFZ,CAGID,KAAK,CAAEG,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmB,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYT,MAAM,CAACG,OAAvB,EAAvB,CAHX,GAMJ,IAAKT,CAAAA,KAAK,CAACkB,mBAAX,CACI,sCACOb,KADP,MAEIF,MAAM,CAAE,IAFZ,CAGID,KAAK,CAAE,EAHX,GAMJ,QACI,MAAOG,CAAAA,KAAP,CA9CR,CAgDH,CAjDM","sourcesContent":["import { types } from \"../types/types\";\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initialState , action) => {\n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n                \n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload]\n            }    \n        \n        case types.notesUpdate:\n            return{\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id \n                        ? action.payload.note\n                        : note\n                )\n            }\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(note => note.id !== action.payload)\n            }        \n\n        case types.notesLogoutCleaning:\n            return{\n                ...state,\n                active: null,\n                notes: []\n\n            }    \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}