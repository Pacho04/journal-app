{"ast":null,"code":"import { db } from \"../firebase/firebase-config\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\nimport Swal from 'sweetalert2';\nimport { fileUpload } from \"../helpers/fileUpload\";\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n    dispatch(addNewNote(doc.id, newNote));\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNote(notes));\n  };\n};\nexport const setNote = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    dispatch(refreshNote(note.id, noteToFirestore));\n    Swal.fire('Saved', note.title, 'success');\n  };\n};\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdate,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note\n    }\n  }\n});\nexport const startUploading = file => {\n  return async (dispatch, getState) => {\n    const {\n      active: activeNote\n    } = getState().notes;\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\nexport const startDeleting = id => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id\n});\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning\n});","map":{"version":3,"sources":["/home/david/Escritorio/React/08-journal-app-19/src/actions/notes.js"],"names":["db","loadNotes","types","Swal","fileUpload","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","addNewNote","note","type","notesActive","payload","notesAddNew","startLoadingNotes","notes","setNote","notesLoad","startSaveNote","url","noteToFirestore","update","refreshNote","fire","notesUpdate","startUploading","file","active","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startDeleting","delete","deleteNote","notesDelete","noteLogout","notesLogoutCleaning"],"mappings":"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","sourcesContent":["import { db } from \"../firebase/firebase-config\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\nimport Swal from 'sweetalert2';\nimport { fileUpload } from \"../helpers/fileUpload\";\n\n\nexport const startNewNote = () =>{\n    return async(dispatch, getState) => {\n\n        const  {uid} = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n\n        dispatch(activeNote(doc.id, newNote));\n        dispatch(addNewNote(doc.id, newNote));\n\n    }\n}\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n})\n\nexport const startLoadingNotes = (uid) => {\n    return async(dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNote(notes));\n    }\n}\n\nexport const setNote = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = (note) => {\n\n    return async(dispatch, getState) => {\n\n        const  {uid} = getState().auth;\n\n        if(!note.url){\n            delete note.url;\n        }\n\n        const noteToFirestore = {...note};\n        delete noteToFirestore.id;\n\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n\n        dispatch(refreshNote(note.id, noteToFirestore));\n\n        Swal.fire('Saved', note.title, 'success');\n\n    }\n\n}\n\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdate,\n    payload: {\n        id, \n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUploading = (file) => {\n    return async(dispatch, getState) => {\n        const {active:activeNote} = getState().notes;\n        \n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n        \n        const fileUrl = await fileUpload(file);\n        activeNote.url = fileUrl;\n\n        dispatch(startSaveNote(activeNote));\n\n        Swal.close();\n    }\n}\n\nexport const startDeleting = (id) => {\n    return async(dispatch, getState) => {\n        const uid = getState().auth.uid;\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n        dispatch( deleteNote(id));\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning\n});"]},"metadata":{},"sourceType":"module"}