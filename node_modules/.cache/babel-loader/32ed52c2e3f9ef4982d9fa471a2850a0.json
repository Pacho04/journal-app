{"ast":null,"code":"import _slicedToArray from\"/home/david/Escritorio/React/08-journal-app-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import validator from'validator';import{Link}from'react-router-dom';import{useForm}from'../../hooks/useForm';import{useDispatch,useSelector}from'react-redux';import{removeError,setError}from'../../actions/ui';import{startRegisterWithEmailPasswordName}from'../../actions/auth';export var RegisterScreen=function RegisterScreen(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.ui;}),msgError=_useSelector.msgError;var _useForm=useForm({name:'David',email:'david@gmail.com',password:'123456',password2:'123456'}),_useForm2=_slicedToArray(_useForm,2),value=_useForm2[0],handleInputChange=_useForm2[1];var name=value.name,email=value.email,password=value.password,password2=value.password2;var handleRegister=function handleRegister(e){e.preventDefault();if(isFormValid()){dispatch(startRegisterWithEmailPasswordName(email,password,name));}};var isFormValid=function isFormValid(){if(name.trim().length===0){dispatch(setError('Name is requered'));return false;}else if(!validator.isEmail(email)){dispatch(setError('Email is not valid'));return false;}else if(password!==password2||password.length<5){dispatch(setError('Password is not valid'));return false;}dispatch(removeError());return true;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",{className:\"auth__title\"},\"Register\"),msgError&&/*#__PURE__*/React.createElement(\"div\",{className:\"auth__alert-erorr\"},msgError),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleRegister},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",className:\"auth__input\",autoComplete:\"off\",value:name,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Email\",name:\"email\",className:\"auth__input\",autoComplete:\"off\",value:email,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",className:\"auth__input\",value:password,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",placeholder:\"Confirm\",name:\"password2\",className:\"auth__input\",value:password2,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary btn-block mb-5\",disabled:false},\"Register\"),/*#__PURE__*/React.createElement(Link,{to:\"/auth/login\",className:\"link\"},\"Create new account\")));};","map":{"version":3,"sources":["/home/david/Escritorio/React/08-journal-app-19/src/components/auth/RegisterScreen.js"],"names":["React","validator","Link","useForm","useDispatch","useSelector","removeError","setError","startRegisterWithEmailPasswordName","RegisterScreen","dispatch","state","ui","msgError","name","email","password","password2","value","handleInputChange","handleRegister","e","preventDefault","isFormValid","trim","length","isEmail"],"mappings":"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","sourcesContent":["import React from 'react';\nimport validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui);\n\n    const [value, handleInputChange] = useForm({\n        name: 'David',\n        email: 'david@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const { name, email, password, password2 } = value;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\n        }\n\n    }\n\n    const isFormValid = () => {\n\n        if (name.trim().length === 0) {\n            dispatch(setError('Name is requered'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            dispatch(setError('Email is not valid'));\n            return false;\n        } else if (password !== password2 || password.length < 5) {\n            dispatch(setError('Password is not valid'));\n            return false;\n        }\n\n        dispatch(removeError());\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            {\n                msgError &&\n                (<div className='auth__alert-erorr'>\n                    {msgError}\n                </div>)\n            }\n\n            <form onSubmit={handleRegister}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                    disabled={false}\n                >\n                    Register\n                </button>\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Create new account\n                    </Link>\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}