{"ast":null,"code":"import { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from \"../types/types\";\nexport const startLoginEmailPassword = (email, password) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(login(1111, 'Palermo'));\n    }, 3500);\n  };\n};\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n  return dispatch => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(async ({\n      user\n    }) => {\n      await user.updateProfile({\n        displayName: name\n      });\n      dispatch(login(user.uid, user.displayName));\n    });\n  };\n};\nexport const startGoogleLogin = () => {\n  return dispatch => {\n    firebase.auth().signInWithPopup(googleAuthProvider).then(({\n      user\n    }) => {\n      dispatch(login(user.uid, user.displayName));\n    });\n  };\n};\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName\n  }\n});","map":{"version":3,"sources":["/home/david/Escritorio/React/08-journal-app/src/actions/auth.js"],"names":["firebase","googleAuthProvider","types","startLoginEmailPassword","email","password","dispatch","setTimeout","login","startRegisterWithEmailPasswordName","name","auth","createUserWithEmailAndPassword","then","user","updateProfile","displayName","uid","startGoogleLogin","signInWithPopup","type","payload"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,kBAAlB,QAA4C,6BAA5C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAoB;AACvD,SAAQC,QAAD,IAAc;AACjBC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAAEE,KAAK,CAAC,IAAD,EAAO,SAAP,CAAP,CAAR;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMC,kCAAkC,GAAG,CAACL,KAAD,EAAQC,QAAR,EAAkBK,IAAlB,KAA2B;AACzE,SAAOJ,QAAD,IAAc;AAChBN,IAAAA,QAAQ,CAACW,IAAT,GAAgBC,8BAAhB,CAA+CR,KAA/C,EAAsDC,QAAtD,EACKQ,IADL,CACU,OAAM;AAACC,MAAAA;AAAD,KAAN,KAAiB;AACnB,YAAMA,IAAI,CAACC,aAAL,CAAmB;AAACC,QAAAA,WAAW,EAAEN;AAAd,OAAnB,CAAN;AACAJ,MAAAA,QAAQ,CACJE,KAAK,CAACM,IAAI,CAACG,GAAN,EAAWH,IAAI,CAACE,WAAhB,CADD,CAAR;AAGH,KANL;AAOH,GARD;AASH,CAVM;AAYP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AAClC,SAAQZ,QAAD,IAAc;AACjBN,IAAAA,QAAQ,CAACW,IAAT,GAAgBQ,eAAhB,CAAgClB,kBAAhC,EACKY,IADL,CACU,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AACdR,MAAAA,QAAQ,CACJE,KAAK,CAACM,IAAI,CAACG,GAAN,EAAWH,IAAI,CAACE,WAAhB,CADD,CAAR;AAGH,KALL;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMR,KAAK,GAAG,CAACS,GAAD,EAAMD,WAAN,MAAuB;AAEpCI,EAAAA,IAAI,EAAElB,KAAK,CAACM,KAFwB;AAGpCa,EAAAA,OAAO,EAAE;AACLJ,IAAAA,GADK;AAELD,IAAAA;AAFK;AAH2B,CAAvB,CAAd","sourcesContent":["import {firebase, googleAuthProvider } from '../firebase/firebase-config';       \nimport { types } from \"../types/types\";\n\nexport const startLoginEmailPassword = (email,password) => {\n    return (dispatch) => {\n        setTimeout(() => {\n            dispatch( login(1111, 'Palermo'));\n        }, 3500);\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n    return(dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(async({user}) => {\n                await user.updateProfile({displayName: name});\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            });\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(({user}) => {\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            });\n    }\n}\n\nexport const login = (uid, displayName) => ({\n\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    \n});"]},"metadata":{},"sourceType":"module"}